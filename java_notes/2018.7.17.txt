对于多线程中的“互斥”以及“互斥锁”：
比如我这几天一直在看的代码里面的put（）还有get（）方法，这两个基本每次都要加互斥锁实现“二者互斥”：
即我在被使用的时候，看另一个就不能在被使用 
就是说：比如我有个1号线程正在调用put（）方法，访问里面对象的变量，那么其他线程就不能再在我1号线程访问改变这些变量的时候再进入临界区，度对
这些变量进行访问和改变，形似二者的“互斥”。
而一般情况下为了实现同步，除了互斥锁之外，还需要和一个或多个信号量（如这几天看的判断缓存区是否为空的isEmpty和判断当前发牌顺序的order），
wait（）还有notify（）等方法配合使用。

可不可以理解成：“如果一个方法被synchronized关键字修饰了，那么其实就相当于保证了这个方法在自己的方法体被执行完之前，不会被其他线程打断，
即：保证了被synchronized关键字修饰的方法体的运行完全和完整。”？

关于try和catch
还是没有弄清晰关于抛出异常的概念和相关方法
还有一个就是我自己在重写将随机int写入文件时候发现在写WriteTo方法时候要try 注意最好不好多次按照顺序try 如果一段语句块需要多次警惕是否抛出异常
则最好就是try、catch语句的嵌套使用。

下午剩下的一个小时就看看异常抛出那块好了...真的是服了油腻中年人了...感觉自己在这里待的时间越久就会在越讨厌自己的同时越来越紧张不安，不安自己
以后没有实力只能和这里的人一样天天混日子做油腻中年人，哎...
墨菲定理啊墨菲定理...希望自己努力去争取自己想要的生活吧...
真的头疼。