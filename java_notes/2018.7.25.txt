一个服务端的端口是不是可以同时连接多个客户端的端口啊？//2018.7.24_Test里面的几个代码
//BacklogTest包里面的代码（在服务端不加睡眠的情况下）是不是客户端100个一次性全发过去然后服务端每次只能接收一个，接收一次，服务端就释放一次
连接，（只要有一端把socket释放掉那么整个TCP的连接就释放掉了？）虽然客户端的100个socket是最后才一次性全部释放掉，但是因为每次服务端都接收
一个就释放一个，所以同一时刻只有一条TCP链路？即一个服务端端口只能同时连接一个客户端的端口？
好像不太对...
不是
那既然一个服务端的端口可以同时和多个客户端的端口建立连接， 那么为什么TCP多方聊天的代码里每一次建立一条连接，被请求建立连接的那一方都要把
自己的port号加一，不加一运行代码还会抛出异常啊...

关于TCP和UDP的“可靠传输”与“不可靠传输”的理解
你看哈
TCP用Socket传输数据的时候 借助的是流 一旦连接建立 则双方的流就连接在了一起 只要我从这边的输出流发送 那么对面的输入流就一定可以读取到
但是UDP是有Packet 然后每次手动取出receive到的数据并进行处理 发送端就算一直send 只要我接收端这边不调用receive方法 那么就永远都不会接收到
TCP必须要双方建立连接成功 才能开始通信 通信链路建立不成功则会抛出异常 但是UDP不是 你发你的 我收不收是我的事情 而且就算因为线路出了问题
导致发送的数据没被接收到 也不会抛出异常

你看TCP实现点到点聊天的那个代码 我服务器这边调用accept方法阻塞当前线程 等待客户端的连接请求 只有客户端来连接请求了 并且请求通过了 成功建立
连接了 服务端才会出来一个frame...